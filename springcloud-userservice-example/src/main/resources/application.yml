server:
  port: 8080

spring:
  application:
    name: user-service
  zipkin:
    baseUrl: http://localhost:9411
    sender:
      # web, rabbit, activemq or kafka
      type: rabbit
  sleuth:
    sampler:
      probability: 1.0
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    hostname: localhost

resilience4j.retry:
  configs:
    default:
      registerHealthIndicator: true
      maxAttempts: 3
      waitDuration: 1s
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
  instances:
    order-service:
      baseConfig: default
      ignoreExceptions:
        - io.github.resilience4j.circuitbreaker.CallNotPermittedException

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      failureRateThreshold: 100
      slowCallRateThreshold: 100
      slowCallDurationThreshold: 60000
      permittedNumberOfCallsInHalfOpenState: 5
      maxWaitDurationInHalfOpenState: 60000
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 20
      minimumNumberOfCalls: 4
      waitDurationInOpenState: 60000
  instances:
    order-service:
      baseConfig: default

management.endpoint.health.show-details: always

management:
  endpoints:
    web:
      exposure:
        include: health,info,circuitbreakers,circuitbreakerevents,retries,retryevents
  health:
    circuitbreakers:
      enabled: true
    retries:
      enabled: true

services:
  orderService:
    name: order-service